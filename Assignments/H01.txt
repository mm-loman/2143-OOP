A.

1. A class is a template for a structure that holds data types and methods within an object
An object is a particular instance of a class that holds its own specific data

2. A constructor is a method which gives an object its own default or particular data values
A destructor is a method that deletes the data saved for an object and frees up the memory used

3. An object is given memory and created using a constructor, then the object can be manipulated or methods can be called
After the onject is used, a destructor is used to free the memory occupied by the object's data
It is important to manage and free memory no longer required to avoid issues such as memory leaks in complex programs

B.
#include <iostream>
using namespace std;

int main() {
  class creature{
private:
  string name;
  
public:
  creature(){
    name = "creature";
  }
  creature(string n) {
    this->name = n;
  }
  
  void getName(){
    cout << name << endl;
  }

  ~creature(){
    cout << name << " destroyed." << endl;
  }
 
};
}

creature is created using the constructor, giving the creature a name as a string. 
The methods such as getName can be used, then the object is destroyed using the destructor.

C.

1. The constructor ensures the appropriate data is included when the object is created, a default constructor assigns a name even when there is no data passed.

2. Destructors are necessary to free memory which can become unavailable and cause program issues if not deleted.

3. Issues such as a memory leak or duplicate data can happen if a class has unmanaged resources

